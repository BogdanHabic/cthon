Terminals unused in grammar

   _ELIF
   _SWITCH
   _CASE
   _DEFAULT
   _BREAK
   _FOR
   _WHILE
   _DO
   _LF


State 39 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: variable_list function_list
    2        | function_list

    3 variable_list: variable _SEMICOLON
    4              | variable_list variable _SEMICOLON

    5 variable: type _ID

    6 type: _TYPE

    7 function_list: function
    8              | function_list function

    9 function: type _ID _LPAREN parameters _RPAREN body

   10 parameters: %empty
   11           | parameter_list

   12 parameter_list: variable
   13               | parameter_list _COMMA variable

   14 body: _LBRACKET variable_list statement_list _RBRACKET
   15     | _LBRACKET statement_list _RBRACKET

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: assignment_statement
   19          | if_statement
   20          | return_statement
   21          | compound_statement

   22 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   23 num_exp: mul_exp
   24        | num_exp _PLUS mul_exp
   25        | num_exp _MINUS mul_exp

   26 mul_exp: exp
   27        | mul_exp _TIMES exp
   28        | mul_exp _DIV exp

   29 exp: constant
   30    | _ID
   31    | function_call
   32    | _LPAREN num_exp _RPAREN

   33 constant: _INT_NUMBER
   34         | _UNSIGNED_NUMBER

   35 function_call: _ID _LPAREN arguments _RPAREN

   36 arguments: %empty
   37          | argument_list

   38 argument_list: num_exp
   39              | argument_list _COMMA num_exp

   40 if_statement: if_part
   41             | if_part _ELSE statement

   42 if_part: _IF _LPAREN rel_exp _RPAREN statement

   43 rel_exp: num_exp _RELOP num_exp

   44 return_statement: _RETURN num_exp _SEMICOLON

   45 compound_statement: _LBRACKET statement_list _RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 6
_IF (259) 42
_ELSE (260) 41
_ELIF (261)
_SWITCH (262)
_CASE (263)
_DEFAULT (264)
_BREAK (265)
_FOR (266)
_WHILE (267)
_DO (268)
_RETURN (269) 44
_ID (270) 5 9 22 30 35
_INT_NUMBER (271) 33
_UNSIGNED_NUMBER (272) 34
_LPAREN (273) 9 32 35 42
_RPAREN (274) 9 32 35 42
_COMMA (275) 13 39
_LBRACKET (276) 14 15 45
_RBRACKET (277) 14 15 45
_ASSIGN (278) 22
_SEMICOLON (279) 3 4 22 44
_PLUS (280) 24
_MINUS (281) 25
_TIMES (282) 27
_DIV (283) 28
_RELOP (284) 43
_LF (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1 2, on right: 0
variable_list (33)
    on left: 3 4, on right: 1 4 14
variable (34)
    on left: 5, on right: 3 4 12 13
type (35)
    on left: 6, on right: 5 9
function_list (36)
    on left: 7 8, on right: 1 2 8
function (37)
    on left: 9, on right: 7 8
parameters (38)
    on left: 10 11, on right: 9
parameter_list (39)
    on left: 12 13, on right: 11 13
body (40)
    on left: 14 15, on right: 9
statement_list (41)
    on left: 16 17, on right: 14 15 17 45
statement (42)
    on left: 18 19 20 21, on right: 17 41 42
assignment_statement (43)
    on left: 22, on right: 18
num_exp (44)
    on left: 23 24 25, on right: 22 24 25 32 38 39 43 44
mul_exp (45)
    on left: 26 27 28, on right: 23 24 25 27 28
exp (46)
    on left: 29 30 31 32, on right: 26 27 28
constant (47)
    on left: 33 34, on right: 29
function_call (48)
    on left: 35, on right: 31
arguments (49)
    on left: 36 37, on right: 35
argument_list (50)
    on left: 38 39, on right: 37 39
if_statement (51)
    on left: 40 41, on right: 19
if_part (52)
    on left: 42, on right: 40 41
rel_exp (53)
    on left: 43, on right: 42
return_statement (54)
    on left: 44, on right: 20
compound_statement (55)
    on left: 45, on right: 21


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    variable_list  go to state 3
    variable       go to state 4
    type           go to state 5
    function_list  go to state 6
    function       go to state 7


State 1

    6 type: _TYPE .

    $default  reduce using rule 6 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 8


State 3

    1 program: variable_list . function_list
    4 variable_list: variable_list . variable _SEMICOLON

    _TYPE  shift, and go to state 1

    variable       go to state 9
    type           go to state 5
    function_list  go to state 10
    function       go to state 7


State 4

    3 variable_list: variable . _SEMICOLON

    _SEMICOLON  shift, and go to state 11


State 5

    5 variable: type . _ID
    9 function: type . _ID _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 12


State 6

    2 program: function_list .
    8 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 2 (program)

    type      go to state 13
    function  go to state 14


State 7

    7 function_list: function .

    $default  reduce using rule 7 (function_list)


State 8

    0 $accept: program $end .

    $default  accept


State 9

    4 variable_list: variable_list variable . _SEMICOLON

    _SEMICOLON  shift, and go to state 15


State 10

    1 program: variable_list function_list .
    8 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    type      go to state 13
    function  go to state 14


State 11

    3 variable_list: variable _SEMICOLON .

    $default  reduce using rule 3 (variable_list)


State 12

    5 variable: type _ID .
    9 function: type _ID . _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 16

    $default  reduce using rule 5 (variable)


State 13

    9 function: type . _ID _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 17


State 14

    8 function_list: function_list function .

    $default  reduce using rule 8 (function_list)


State 15

    4 variable_list: variable_list variable _SEMICOLON .

    $default  reduce using rule 4 (variable_list)


State 16

    9 function: type _ID _LPAREN . parameters _RPAREN body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 10 (parameters)

    variable        go to state 18
    type            go to state 19
    parameters      go to state 20
    parameter_list  go to state 21


State 17

    9 function: type _ID . _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 16


State 18

   12 parameter_list: variable .

    $default  reduce using rule 12 (parameter_list)


State 19

    5 variable: type . _ID

    _ID  shift, and go to state 22


State 20

    9 function: type _ID _LPAREN parameters . _RPAREN body

    _RPAREN  shift, and go to state 23


State 21

   11 parameters: parameter_list .
   13 parameter_list: parameter_list . _COMMA variable

    _COMMA  shift, and go to state 24

    $default  reduce using rule 11 (parameters)


State 22

    5 variable: type _ID .

    $default  reduce using rule 5 (variable)


State 23

    9 function: type _ID _LPAREN parameters _RPAREN . body

    _LBRACKET  shift, and go to state 25

    body  go to state 26


State 24

   13 parameter_list: parameter_list _COMMA . variable

    _TYPE  shift, and go to state 1

    variable  go to state 27
    type      go to state 19


State 25

   14 body: _LBRACKET . variable_list statement_list _RBRACKET
   15     | _LBRACKET . statement_list _RBRACKET

    _TYPE  shift, and go to state 1

    $default  reduce using rule 16 (statement_list)

    variable_list   go to state 28
    variable        go to state 4
    type            go to state 19
    statement_list  go to state 29


State 26

    9 function: type _ID _LPAREN parameters _RPAREN body .

    $default  reduce using rule 9 (function)


State 27

   13 parameter_list: parameter_list _COMMA variable .

    $default  reduce using rule 13 (parameter_list)


State 28

    4 variable_list: variable_list . variable _SEMICOLON
   14 body: _LBRACKET variable_list . statement_list _RBRACKET

    _TYPE  shift, and go to state 1

    $default  reduce using rule 16 (statement_list)

    variable        go to state 9
    type            go to state 19
    statement_list  go to state 30


State 29

   15 body: _LBRACKET statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34
    _RBRACKET  shift, and go to state 35

    statement             go to state 36
    assignment_statement  go to state 37
    if_statement          go to state 38
    if_part               go to state 39
    return_statement      go to state 40
    compound_statement    go to state 41


State 30

   14 body: _LBRACKET variable_list statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34
    _RBRACKET  shift, and go to state 42

    statement             go to state 36
    assignment_statement  go to state 37
    if_statement          go to state 38
    if_part               go to state 39
    return_statement      go to state 40
    compound_statement    go to state 41


State 31

   42 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 43


State 32

   44 return_statement: _RETURN . num_exp _SEMICOLON

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    num_exp        go to state 48
    mul_exp        go to state 49
    exp            go to state 50
    constant       go to state 51
    function_call  go to state 52


State 33

   22 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 53


State 34

   45 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 54


State 35

   15 body: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 15 (body)


State 36

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 37

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 38

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 39

   40 if_statement: if_part .
   41             | if_part . _ELSE statement

    _ELSE  shift, and go to state 55

    _ELSE     [reduce using rule 40 (if_statement)]
    $default  reduce using rule 40 (if_statement)


State 40

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 41

   21 statement: compound_statement .

    $default  reduce using rule 21 (statement)


State 42

   14 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 14 (body)


State 43

   42 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    num_exp        go to state 56
    mul_exp        go to state 49
    exp            go to state 50
    constant       go to state 51
    function_call  go to state 52
    rel_exp        go to state 57


State 44

   30 exp: _ID .
   35 function_call: _ID . _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 58

    $default  reduce using rule 30 (exp)


State 45

   33 constant: _INT_NUMBER .

    $default  reduce using rule 33 (constant)


State 46

   34 constant: _UNSIGNED_NUMBER .

    $default  reduce using rule 34 (constant)


State 47

   32 exp: _LPAREN . num_exp _RPAREN

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    num_exp        go to state 59
    mul_exp        go to state 49
    exp            go to state 50
    constant       go to state 51
    function_call  go to state 52


State 48

   24 num_exp: num_exp . _PLUS mul_exp
   25        | num_exp . _MINUS mul_exp
   44 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 60
    _PLUS       shift, and go to state 61
    _MINUS      shift, and go to state 62


State 49

   23 num_exp: mul_exp .
   27 mul_exp: mul_exp . _TIMES exp
   28        | mul_exp . _DIV exp

    _TIMES  shift, and go to state 63
    _DIV    shift, and go to state 64

    $default  reduce using rule 23 (num_exp)


State 50

   26 mul_exp: exp .

    $default  reduce using rule 26 (mul_exp)


State 51

   29 exp: constant .

    $default  reduce using rule 29 (exp)


State 52

   31 exp: function_call .

    $default  reduce using rule 31 (exp)


State 53

   22 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    num_exp        go to state 65
    mul_exp        go to state 49
    exp            go to state 50
    constant       go to state 51
    function_call  go to state 52


State 54

   17 statement_list: statement_list . statement
   45 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34
    _RBRACKET  shift, and go to state 66

    statement             go to state 36
    assignment_statement  go to state 37
    if_statement          go to state 38
    if_part               go to state 39
    return_statement      go to state 40
    compound_statement    go to state 41


State 55

   41 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34

    statement             go to state 67
    assignment_statement  go to state 37
    if_statement          go to state 38
    if_part               go to state 39
    return_statement      go to state 40
    compound_statement    go to state 41


State 56

   24 num_exp: num_exp . _PLUS mul_exp
   25        | num_exp . _MINUS mul_exp
   43 rel_exp: num_exp . _RELOP num_exp

    _PLUS   shift, and go to state 61
    _MINUS  shift, and go to state 62
    _RELOP  shift, and go to state 68


State 57

   42 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 69


State 58

   35 function_call: _ID _LPAREN . arguments _RPAREN

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    $default  reduce using rule 36 (arguments)

    num_exp        go to state 70
    mul_exp        go to state 49
    exp            go to state 50
    constant       go to state 51
    function_call  go to state 52
    arguments      go to state 71
    argument_list  go to state 72


State 59

   24 num_exp: num_exp . _PLUS mul_exp
   25        | num_exp . _MINUS mul_exp
   32 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 73
    _PLUS    shift, and go to state 61
    _MINUS   shift, and go to state 62


State 60

   44 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 44 (return_statement)


State 61

   24 num_exp: num_exp _PLUS . mul_exp

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    mul_exp        go to state 74
    exp            go to state 50
    constant       go to state 51
    function_call  go to state 52


State 62

   25 num_exp: num_exp _MINUS . mul_exp

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    mul_exp        go to state 75
    exp            go to state 50
    constant       go to state 51
    function_call  go to state 52


State 63

   27 mul_exp: mul_exp _TIMES . exp

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    exp            go to state 76
    constant       go to state 51
    function_call  go to state 52


State 64

   28 mul_exp: mul_exp _DIV . exp

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    exp            go to state 77
    constant       go to state 51
    function_call  go to state 52


State 65

   22 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   24 num_exp: num_exp . _PLUS mul_exp
   25        | num_exp . _MINUS mul_exp

    _SEMICOLON  shift, and go to state 78
    _PLUS       shift, and go to state 61
    _MINUS      shift, and go to state 62


State 66

   45 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 45 (compound_statement)


State 67

   41 if_statement: if_part _ELSE statement .

    $default  reduce using rule 41 (if_statement)


State 68

   43 rel_exp: num_exp _RELOP . num_exp

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    num_exp        go to state 79
    mul_exp        go to state 49
    exp            go to state 50
    constant       go to state 51
    function_call  go to state 52


State 69

   42 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34

    statement             go to state 80
    assignment_statement  go to state 37
    if_statement          go to state 38
    if_part               go to state 39
    return_statement      go to state 40
    compound_statement    go to state 41


State 70

   24 num_exp: num_exp . _PLUS mul_exp
   25        | num_exp . _MINUS mul_exp
   38 argument_list: num_exp .

    _PLUS   shift, and go to state 61
    _MINUS  shift, and go to state 62

    $default  reduce using rule 38 (argument_list)


State 71

   35 function_call: _ID _LPAREN arguments . _RPAREN

    _RPAREN  shift, and go to state 81


State 72

   37 arguments: argument_list .
   39 argument_list: argument_list . _COMMA num_exp

    _COMMA  shift, and go to state 82

    $default  reduce using rule 37 (arguments)


State 73

   32 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 32 (exp)


State 74

   24 num_exp: num_exp _PLUS mul_exp .
   27 mul_exp: mul_exp . _TIMES exp
   28        | mul_exp . _DIV exp

    _TIMES  shift, and go to state 63
    _DIV    shift, and go to state 64

    $default  reduce using rule 24 (num_exp)


State 75

   25 num_exp: num_exp _MINUS mul_exp .
   27 mul_exp: mul_exp . _TIMES exp
   28        | mul_exp . _DIV exp

    _TIMES  shift, and go to state 63
    _DIV    shift, and go to state 64

    $default  reduce using rule 25 (num_exp)


State 76

   27 mul_exp: mul_exp _TIMES exp .

    $default  reduce using rule 27 (mul_exp)


State 77

   28 mul_exp: mul_exp _DIV exp .

    $default  reduce using rule 28 (mul_exp)


State 78

   22 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 22 (assignment_statement)


State 79

   24 num_exp: num_exp . _PLUS mul_exp
   25        | num_exp . _MINUS mul_exp
   43 rel_exp: num_exp _RELOP num_exp .

    _PLUS   shift, and go to state 61
    _MINUS  shift, and go to state 62

    $default  reduce using rule 43 (rel_exp)


State 80

   42 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 42 (if_part)


State 81

   35 function_call: _ID _LPAREN arguments _RPAREN .

    $default  reduce using rule 35 (function_call)


State 82

   39 argument_list: argument_list _COMMA . num_exp

    _ID               shift, and go to state 44
    _INT_NUMBER       shift, and go to state 45
    _UNSIGNED_NUMBER  shift, and go to state 46
    _LPAREN           shift, and go to state 47

    num_exp        go to state 83
    mul_exp        go to state 49
    exp            go to state 50
    constant       go to state 51
    function_call  go to state 52


State 83

   24 num_exp: num_exp . _PLUS mul_exp
   25        | num_exp . _MINUS mul_exp
   39 argument_list: argument_list _COMMA num_exp .

    _PLUS   shift, and go to state 61
    _MINUS  shift, and go to state 62

    $default  reduce using rule 39 (argument_list)
